[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "D4GPROJECT-TO-RENAME"
version = "0.1.0"
description = "Project Description to be modified"
authors = ["DataForGood"]
license = " MIT"
readme = "README.md"
# Majority of D4G projects are not used as packages
# 2 options:
# 1. This project is NOT/will NOT be used as a package
# package-mode = false
# 2. Replace with your project's main module/folder
packages = [{ include = "PROJECT_TO_RENAME" }]

[tool.poetry.dependencies]
python = "^3.10"

# Data Science dependencies
[tool.poetry.group.data.dependencies]
pandas = "^2.0.0"
numpy = ">=1.26"
matplotlib = "^3.9.0"

# Code Linting and Formatting dependencies
[tool.poetry.group.dev.dependencies]
pre-commit = "^3.7.1"
ruff = "^0.4.10"

# Test dependencies
[tool.poetry.group.test.dependencies]
pytest = "^8.0.0"
pytest-mock = "*"
tox = "^4.4.8"


# D4G: Python Linting and Formatting
[tool.ruff]
force-exclude = true
fix = true
show-fixes = true
# Same as Black.
line-length = 96
target-version = "py310"

cache-dir = ".cache/ruff"
# Output-format: "full" | "concise" | "grouped" | "json" | "junit" | "github" | "gitlab" | "pylint" | "azure"
# Group violations by containing file.
output-format = "grouped"

extend-include = ["*.ipynb"]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    # D4G specific: needed for d4g-tools
    "**/.generated/**",
    "**/.gi-**",
    ".cache",
]


[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
# Numpy2.0:NPY201

select = ["E4", "E7", "E9", "F", "B", "NPY201"]
ignore = ["E501"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.extend-per-file-ignores]
# Also ignore `F401` in all `__init__.py` files.
# Diable `F401` to keep unsed imports from `__init__.py` files.
"__init__.py" = ["F401"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
